---
import ContactButton from "../common/ContactButton.astro";

interface Step {
  title: string;
  description: string;
  subdescription?: string;
}

const steps: Step[] = [
  {
    title: "Inscríbete",
    description: "Completa el formulario y da el primer paso hacie el futuro.",
  },
  {
    title: "Programa tus pruebas",
    description: "Elige la fecha y hora que te resulten más cómodas.",
  },
  {
    title: "Completa tu evaluación",
    description: "Realiza las pruebas y demuestra tus conocimientos básicos.",
  },
  {
    title: "Entrevista personal",
    description:
      "Nos conocemos y exploramos cómo encajas en la comunidad de Campuslands.",
  },
  {
    title: "Comunicación de resultado",
    description:
      "Recibirás un contacto nuestro para confirmar tu ingreso y explicar los siguientes pasos.",
  },
];
---

<section
  class="sections max-w-[1150px] self-center relative py-6 lg:py-20 h-fit lg:h-[740px]"
>
  <div
    class="relative mx-auto flex flex-wrap justify-center gap-8 h-fit w-full px-10 md:px-50 lg:px-0 max-w-7xl"
  >
    <div
        class="flex w-full md:max-w-[350px] lg:w-[425px] lg:max-w-[425px] flex-col gap-y-8 items-center lg:items-start"
      >
        <p
          class="gradient-text text-center lg:text-start f-40 leading-8 lg:leading-[60px] f-700"
        >
          Sigue estos simples pasos y conviértete en un Camper
        </p>
        <p
          class="text-center lg:text-start text-sm lg:text-base leading-6 text-white"
        >
          Hemos simplificado el proceso para que puedas inscribirte, presentarte
          y unirte a Campuslands de manera rápida y sencilla. ¡Empieza hoy
          mismo!
        </p>
        <ContactButton
          tipo="insripcion"
          whatsApp="+50240579715"
          iconName="share.svg"
        />
      </div>
    <div class="flex gap-3">
      <div
        class="relative flex items-center content-center h-[380px] max-md:mt-5"
      >
        <div
          class="transition-opacity p-6 flex-col gap-4 rounded-[40px] w-[342px] lg:w-[435px] h-fit duration-[4000ms] ease-in-out opacity-100 inset-0 flex text-white"
          style="background: linear-gradient(180deg, rgba(255, 255, 255, 0.16) 55.8%, rgba(153, 153, 153, 0.08) 111.74%);"
          data-step-index="0"
        >
          <p class="text-[40px]" id="step-number">01</p>
          <div class="flex flex-col gap-2">
            <p id="step-title" class="text-2xl font-bold"></p>
            <p id="step-description" class="text-base mt-2"></p>
          </div>
        </div>
      </div>
      <div
        class="flex flex-col gap-3 justify-center max-w-[70px] relative gap-x-3 z-30"
      >
        <div
          id="prev-step"
          class="flex items-center justify-center size-6 min-w-6 rounded-full cursor-pointer bg-[#02D9A4] select-none"
        >
          <img
            src="src/assets/img/icons/arrow-up.svg"
            alt=""
            width="14"
            draggable="false"
          />
        </div>
        <div
          id="next-step"
          class="flex items-center justify-center size-6 min-w-6 rounded-full cursor-pointer bg-[#02D9A4] select-none"
        >
          <img
            src="src/assets/img/icons/arrow-down.svg"
            alt=""
            width="14"
            draggable="false"
          />
        </div>
      </div>
    </div>
  </div>
</section>

<script define:vars={{ steps }}>
  let currentIndex = 0;
  const titleEl = document.getElementById("step-title");
  const descriptionEl = document.getElementById("step-description");
  const prevButton = document.getElementById("prev-step");
  const nextButton = document.getElementById("next-step");
  const stepNumber = document.getElementById("step-number");
  const container = document.querySelector("[data-step-index]");

  function updateStep() {
    titleEl.textContent = steps[currentIndex].title;
    descriptionEl.textContent = steps[currentIndex].description;
    container.dataset.stepIndex = currentIndex;
    stepNumber.textContent = `0${currentIndex + 1}`;
  }

  prevButton.addEventListener("click", () => {
    currentIndex = (currentIndex - 1) % steps.length;
    updateStep();
  });
  nextButton.addEventListener("click", () => {
    currentIndex = (currentIndex + 1) % steps.length;
    updateStep();
  });

  updateStep();
</script>
