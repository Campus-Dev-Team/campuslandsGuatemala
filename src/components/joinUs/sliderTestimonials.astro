---
import testimonials from "./testimolias";
const totalSlides = testimonials.length;
---

<section class="sections max-w-[1150px] w-full mx-auto px-4">
  <div class="w-full md:w-4/5 overflow-hidden relative mx-auto">
    <!-- Carousel container -->
    <div 
      class="flex transition-transform duration-500 ease-in-out"
      style={`width: ${totalSlides * 100}%`}
      id="slider-container"
    >
      {
        testimonials.map(({ image, name, description, extraDescription }) => (
          <div class="w-full flex items-center justify-center">
            <div class="container px-2 md:px-6 flex flex-col lg:flex-row gap-4 lg:gap-x-32 items-center justify-center">
              <div class="w-full lg:w-1/3 flex justify-center">
                <img
                  src={image}
                  class="w-full max-w-[200px] md:max-w-[275px] h-auto object-cover rounded-lg"
                  loading="lazy"
                  alt={`Testimonio de ${name}`}
                />
              </div>

              
              <div class="w-full lg:w-2/3 flex flex-col relative text-center lg:text-left">
                <img
                  src="img/quote.svg"
                  alt=""
                  class="hidden lg:block absolute top-[-31px] left-[-90px] w-[115px]"
                />
                <p class="gradient-text text-xl md:text-3xl lg:text-4xl mb-2 md:mb-4">
                  {name}
                </p>
                <p class="text-white max-w-[90%] mx-auto lg:mx-0 mb-2 text-sm md:text-base">
                  {description}
                </p>
                {extraDescription && (
                  <p class="text-white max-w-[90%] mx-auto lg:mx-0 text-sm md:text-base">
                    {extraDescription}
                  </p>
                )}
              </div>
            </div>
          </div>
        ))
      }
    </div>

    <!-- Navigation buttons -->
    <div class="flex justify-center lg:justify-end gap-x-3 z-30 mt-4 md:mt-8">
      <div
        id="prev-testimonials"
        class="flex items-center justify-center size-6 min-w-6 rounded-full cursor-pointer bg-[#02D9A4] hover:bg-opacity-80 transition-colors"
        aria-label="Anterior testimonio"
      >
        <img
          src="img/icons/arrow-left.svg"
          alt=""
          width="14"
          draggable="false"
        />
      </div>
      <div
        id="next-testimonials"
        class="flex items-center justify-center size-6 min-w-6 rounded-full cursor-pointer bg-[#02D9A4] hover:bg-opacity-80 transition-colors"
        aria-label="Siguiente testimonio"
      >
        <img
          src="img/icons/arrow-right.svg"
          alt=""
          width="14"
          draggable="false"
        />
      </div>
    </div>
  </div>
</section>

<script define:vars={{ totalSlides }}>
let currentIndex = 0;
const sliderContainer = document.getElementById("slider-container");

function showSlide(index = 0) {
  if (sliderContainer) {
    // Calculate the exact percentage to move
    const percentage = (index * 100) / totalSlides;
    sliderContainer.style.transform = `translateX(-${percentage}%)`;
  }
}

function nextSlide() {
  currentIndex = (currentIndex + 1) % totalSlides;
  showSlide(currentIndex);
}

function prevSlide() {
  currentIndex = (currentIndex - 1 + totalSlides) % totalSlides;
  showSlide(currentIndex);
}

function setupSlider() {
  const prevButton = document.getElementById("prev-testimonials");
  const nextButton = document.getElementById("next-testimonials");
  
  if (prevButton && nextButton) {
    prevButton.addEventListener("click", prevSlide);
    nextButton.addEventListener("click", nextSlide);
  }
  
  // Initialize the slider position
  showSlide(currentIndex);
  
  // Start autoplay
  const interval = setInterval(nextSlide, 12000);
  
  // Clean up interval when user leaves the page
  return () => clearInterval(interval);
}

// Wait for DOM to be ready
document.addEventListener("DOMContentLoaded", setupSlider);

</script>

